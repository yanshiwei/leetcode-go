func getLastMoment(n int, left []int, right []int) int {
    /*
    这道题最容易让人迷惑的地方在于「当两只向不同方向移动的蚂蚁在某个点相遇时，它们会同时改变移动方向并继续移动」。按照常规思路，需要对每只蚂蚁分别计算每个时刻所在的位置，如果考虑到改变移动方向，情况会非常复杂。

    注意到题目要求的是最后一只蚂蚁从木板上掉下来的时刻，所以并不需要区分每只蚂蚁。注意到题目中的信息，由于改变移动方向不花费额外时间，而且改变移动方向后的移动速度不变，因此，两只相遇的蚂蚁同时改变移动方向之后的情形等价于两只蚂蚁都不改变移动方向，继续按照原来的方向和速度移动，这样问题就简化成根据每只蚂蚁的初始位置和移动方向得到最后一只蚂蚁到达木板边界的时刻。

    假设一只蚂蚁在位置 p。如果这只蚂蚁向左移动，则它到达木板边界需要的时间是 p。如果这只蚂蚁向右移动，则它到达木板边界需要的时间是 n-p。

    遍历数组left 和 right，根据每只蚂蚁的初始位置和移动方向得到每只蚂蚁到达木板边界需要的时间，其中的最大值即为最后一只蚂蚁到达木板边界的时刻，也是最后一只蚂蚁从木板上掉下来的时刻
    */
    var res int
    for i:=range left{
        res=max(res,left[i])
    }
    for i:=range right{
        res=max(res,n-right[i])
    }
    return res
}

func max(x, y int)int {
    if x<y {
        return y
    }
    return x
}
